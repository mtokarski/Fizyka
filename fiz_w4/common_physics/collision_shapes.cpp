/** @file collision_shapes.cpp
 *  @brief implementation of collision shapes
 *
 *	@author Bartlomiej Filipek
 *	@date May 2011
 */

#include "stdafx.h"
#include "collision_shapes.h"

///////////////////////////////////////////////////////////////////////////////
// BoundingSphere
///////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////
bool TestCollision(const BoundingSphere &a, const BoundingSphere &b)
{
	// if (collision) return true

	return false;
}

///////////////////////////////////////////////////////////////////////////////
// AABB
///////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////
void AABB::Reset() 
{ 
	/* todo */ 

	/* sets min to max values 
	 * sets max to min values 
	 *
	 * then one can use AddPoint to
	 * update and calculate proper AABB */
};

///////////////////////////////////////////////////////////////////////////////
void AABB::AddPoint(const Vec3d &pt) 
{
	/* todo */ 

	/* if pt is outside the box then update box's min and max */
}

///////////////////////////////////////////////////////////////////////////////
bool TestCollision(const AABB &a, const AABB &b)
{
	// if (collision) return true

	return false;
}

///////////////////////////////////////////////////////////////////////////////
// OBB
///////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////
OBB::OBB(double half_w, double half_h, double half_d) 
{ 
	/* todo */ 

	/* create box aligned to axes, centered at (0, 0, 0) */
};

///////////////////////////////////////////////////////////////////////////////
void OBB::Rotate(const Matrix3d& rot) 
{
	/* todo */ 
}

///////////////////////////////////////////////////////////////////////////////
void OBB::Translate(const Vec3d& t) 
{
	/* todo */ 
}

///////////////////////////////////////////////////////////////////////////////
bool TestCollision(const OBB &a, const OBB &b)
{
	// if (collision) return true

	return false;
}